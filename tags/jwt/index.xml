<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JWT on Notes</title>
    <link>https://abskmj.github.io/notes/tags/jwt/</link>
    <description>Recent content in JWT on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; abskmj</copyright>
    <lastBuildDate>Tue, 08 May 2018 10:41:21 +0000</lastBuildDate><atom:link href="https://abskmj.github.io/notes/tags/jwt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Authenticate REST APIs using JWT</title>
      <link>https://abskmj.github.io/notes/posts/topics/rest-api/authentication-jwt-rest-apis/</link>
      <pubDate>Tue, 08 May 2018 10:41:21 +0000</pubDate>
      
      <guid>https://abskmj.github.io/notes/posts/topics/rest-api/authentication-jwt-rest-apis/</guid>
      <description>&lt;h1 id=&#34;authentication-vs-authorization&#34;&gt;Authentication vs Authorization&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Authentication: identifying the user who is accessing the resource&lt;/li&gt;
&lt;li&gt;Authorization: checking if the user has permission to perform an action on the resource (e.g updating the resource)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;jwt-for-authentication&#34;&gt;JWT for Authentication&lt;/h1&gt;
&lt;p&gt;JWT or JSON Web Token is a preferrable method for authenticating REST APIs because:&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;authentication-vs-authorization&#34;&gt;Authentication vs Authorization&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Authentication: identifying the user who is accessing the resource&lt;/li&gt;
&lt;li&gt;Authorization: checking if the user has permission to perform an action on the resource (e.g updating the resource)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;jwt-for-authentication&#34;&gt;JWT for Authentication&lt;/h1&gt;
&lt;p&gt;JWT or JSON Web Token is a preferrable method for authenticating REST APIs because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A datastore is not required for its verification.&lt;/li&gt;
&lt;li&gt;It can be issued and verified by a specific application server which has access to the &lt;code&gt;secret&lt;/code&gt; key.&lt;/li&gt;
&lt;li&gt;It has placeholder for additional data whose integrity can be validated.&lt;/li&gt;
&lt;li&gt;It has an expiry time associated with it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JWT can be passed in the &lt;code&gt;Authorization&lt;/code&gt; header.&lt;/p&gt;
&lt;h1 id=&#34;jwt-not-for-authorization&#34;&gt;JWT not for Authorization&lt;/h1&gt;
&lt;p&gt;The data placeholder in JWT makes it a candidate for authorization as well. Server can put roles/grants information in it. However, it is not recommended to be used because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is difficult to update a JWT.&lt;/li&gt;
&lt;li&gt;It is difficult to revoke a JWT.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any changes to JWT is not real-time as each has a specified time of expiry before which it is treated as valid by the application server.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
