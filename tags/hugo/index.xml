<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on console.log(&#39;Hello World!&#39;);</title>
    <link>https://abskmj.github.io/notes/tags/hugo/</link>
    <description>Recent content in Hugo on console.log(&#39;Hello World!&#39;);</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 abskmj</copyright>
    <lastBuildDate>Thu, 23 Apr 2020 13:16:58 +0530</lastBuildDate>
    
	<atom:link href="https://abskmj.github.io/notes/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git Info Variables on Hugo</title>
      <link>https://abskmj.github.io/notes/posts/hugo/hugo-git-info/</link>
      <pubDate>Thu, 23 Apr 2020 13:16:58 +0530</pubDate>
      
      <guid>https://abskmj.github.io/notes/posts/hugo/hugo-git-info/</guid>
      <description>Enable Git Info Variables  Enable .GitInfo object for each page (if the Hugo site is versioned by Git). This will then update the Lastmod parameter for each page using the last git commit date for that content file.
 Terminal hugo --enableGitInfo Config File  Hugo uses the config.toml, config.yaml, or config.json (if found in the site root) as the default site config file.
The user can choose to override that default with one or more site config files using the command line --config switch.</description>
    </item>
    
    <item>
      <title>Deploy a NodeJS application using Git</title>
      <link>https://abskmj.github.io/notes/posts/tutorials/git/deploy-nodejs-git/</link>
      <pubDate>Wed, 09 May 2018 05:09:36 +0000</pubDate>
      
      <guid>https://abskmj.github.io/notes/posts/tutorials/git/deploy-nodejs-git/</guid>
      <description>Remote Repository on Deployment Server Create two folders named project.git and project.source. Create a bare git repo in project.git
git init --bare Configure project.source as working folder for source code by adding below to project.git/hooks/post-receive
#!/bin/sh git --work-tree=/{{path}}/project.source --git-dir=/{{path}}/project.git checkout -f Change file persion to 755 to make it executable.
chmod 755 project.git/hooks/post-receive Add a remote to local repo
git remote add dev git+ssh://{{user}}@{{server}}/{{path}}/project.git Above steps are generic to any kind of project as it simply transfers the code to the server.</description>
    </item>
    
    <item>
      <title>Deploy Hugo Website with Surge for Free</title>
      <link>https://abskmj.github.io/notes/posts/tutorials/deploy-hugo-surge-free/</link>
      <pubDate>Mon, 20 Nov 2017 20:28:20 +0530</pubDate>
      
      <guid>https://abskmj.github.io/notes/posts/tutorials/deploy-hugo-surge-free/</guid>
      <description>Surge is static web publishing for Web Developers, right from the CLI.
 Install Surge CLI npm install -g surge Deploy with Surge Navigate to the public folder generated by Hugo CLI.
surge The site, by default, will hosted on a sub domain of surge.sh.
Deploy Changes surge --domain &amp;lt;your-site&amp;gt;.surge.sh If the same domain name is not provided, another random sub domain will be prompted by Surge CLI which has to changed to original for each deployment.</description>
    </item>
    
  </channel>
</rss>